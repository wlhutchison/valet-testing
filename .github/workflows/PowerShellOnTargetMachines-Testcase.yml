# This is a basic workflow to help you get started with Actions

name: build-playground/williamh/PowerShellOnTargetMachines-Testcase

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  BuildParameters_SessionVariables: 5
  Parameters_SessionVariables: "$A=1,$B=2,$C=3,$D=4,$E=5"
  machineName: williamh-test-vm1.westus.cloudapp.azure.com:5987
  sysAccount: valetAdmin
  system_debug: 'false'
jobs:
  Job_1:
    name: Agent job 1
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run PowerShell on Target Machines
      uses: Azure/login@v1
      with:
        creds: "${{ secrets.AZURE_CREDENTIALS }}"
        enable-AzPSSession: true
    - name: Run PowerShell on Target Machines
      uses: azure/powershell@v1
      with:
        inlineScript: |-
          $securePwd =  ConvertTo-SecureString -String ${{ secrets.sysPassword }} -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential("${{ env.SYSACCOUNT }}", $securePwd)
          $sessionOptions = New-PSSessionOption -SkipCACheck -SkipCNCheck -IdleTimeout 7200000 -OperationTimeout 0 -OutputBufferingMode Block
          $scriptBlock = [scriptblock]::Create(
            {
              $sessionVariables = "${{ env.Parameters_SessionVariables}}".split(",")
              foreach($sessionVariable in $sessionVariables)
                $sessionVariable
              cd C:\Tools
              C:\Scripts\InitializationScript.ps1
                  C:\Scripts\MainScript.ps1 -p1 $A -p2 $B -p3 $C
            })
          $machineNames = "${{ env.MACHINENAME }}".split(",")
          foreach($machine in $machineNames)
          {
            $spec = $machine.split(":")
            $fqdn = $spec[0]
            $port = [String]::IsNullOrWhiteSpace($spec[1]) ? "5985" : $spec[1]
            $session = New-PSSession -ComputerName $fqdn -port $port -Credential $cred -useSSL -SessionOption $sessionOptions
            Invoke-Command -Session $session -ScriptBlock $scriptBlock
          }
        errorActionPreference: Stop
        failOnStandardError: false
        azPSVersion: 3.1.0
